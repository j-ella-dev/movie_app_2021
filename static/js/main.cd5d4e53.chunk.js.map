{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","title","year","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","About","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"qXAqCeA,MAhCf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OACI,qBAAKC,UAAU,QAAf,SACI,eAAC,IAAD,CAAMC,GAAI,CAACC,SAAU,gBACrBC,MAAO,CAACP,OAAMD,QAAOE,UAASC,SAAQC,WADtC,UAEI,qBAAKK,IAAKN,EAAQO,IAAKV,EAAOA,MAAOA,IACrC,sBAAKK,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SACKL,IAEL,oBAAIK,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,eAAd,SACKD,EAAOO,KAAI,SAACC,EAAOC,GAChB,OAAO,oBAAgBR,UAAU,cAA1B,SAAyCD,GAAhCS,QAIxB,oBAAGR,UAAU,iBAAb,UAA+BH,EAAQY,MAAM,EAAG,KAAhD,kBCmCLC,G,kNAnDZP,MAAQ,CACLQ,WAAW,EACXC,OAAQ,I,EAKXC,U,sBAAY,8BAAAC,EAAA,sEAMCC,IAAMC,IAAI,4DANX,gBAIKJ,EAJL,EAGNK,KACGA,KAAQL,OAGd,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAP1B,2C,uDAUZ,WAKGQ,KAAKN,c,oBAGR,WAAU,IAAD,EACsBM,KAAKhB,MAA1BQ,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OACG,yBAASZ,UAAU,YAAnB,SACIW,EACM,qBAAKX,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAEF,sBAAKA,UAAU,SAAf,cACDY,EAAON,KAAI,SAAAc,GAAK,OACf,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZD,MAAOyB,EAAMzB,MACbE,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAAQqB,EAAMrB,QANTqB,EAAMC,gB,GArCbE,IAAMC,Y,MCUVC,MAZf,WACI,OACI,sBAAKzB,UAAU,mBAAf,UACI,sIAIA,6DCYG0B,E,uKAjBX,WAAqB,IAAD,EACcP,KAAKQ,MAA3BC,EADQ,EACRA,SAAUC,EADF,EACEA,aACIC,GAAlBF,EAASzB,OACT0B,EAAQE,KAAK,O,oBAIrB,WAAU,IACEH,EAAaT,KAAKQ,MAAlBC,SACR,OAAIA,EAASzB,MACF,+BAAOyB,EAASzB,MAAMR,QAEtB,S,GAbE4B,IAAMC,W,MCWZQ,MATf,WACI,OACI,sBAAKhC,UAAU,MAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBC+BGgC,MA5Bf,WACG,OACG,eAAC,IAAD,WACG,cAAC,EAAD,IAGA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW1B,IACxC,cAAC,IAAD,CAAOwB,KAAK,SAASE,UAAWX,IAChC,cAAC,IAAD,CAAOS,KAAK,gBAAgBE,UAAWV,QCdhDW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cd5d4e53.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Movie({ title, year, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link to={{pathname: '/movie-detail', \r\n            state: {year, title, summary, poster, genres},}}>\r\n                <img src={poster} alt={title} title={title} />\r\n                <div className=\"movie__data\">\r\n                    <h3 className=\"movie__title\">\r\n                        {title}\r\n                    </h3>\r\n                    <h5 className=\"movie__year\">{year}</h5>\r\n                    <ul className=\"movie__genre\">\r\n                        {genres.map((genre, index) => { //index를 빼면 key porp 에러 메시지 발생\r\n                            return <li key={index} className=\"movie_genre\">{genres}</li>;\r\n                        })}\r\n                    </ul>\r\n                    {/* 시놉시스 180자까지만 자르기 */}\r\n                    <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios'; //API 호출\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component { \r\n   state = {\r\n      isLoading: true,\r\n      movies: [],\r\n   };\r\n\r\n   //async : getMovies 함수는 시간이 필요하다\r\n   //await : axios.get의 실행을 기다려 달라\r\n   getMovies = async () => {\r\n      //axios.get()이 반환한 결과를 movies에 저장\r\n      const { //ES6 구조 분해 할당\r\n         data: {\r\n            data: { movies },\r\n         },\r\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n      this.setState({ movies, isLoading: false }); //앞의 movies는 state, 영화 데이터가 있는 변수\r\n   }\r\n\r\n   componentDidMount(){\r\n      //영화 데이터 로딩!\r\n      //axios는 네트워크를 사용하므로 느리게 동작함\r\n      //그래서 axios.get()를 분리해줌\r\n      // axios.get('https://yts-proxy.now.sh/list_movies.json');\r\n      this.getMovies();\r\n   }\r\n\r\n   render() {\r\n      const {isLoading, movies} = this.state;\r\n      return (\r\n         <section className=\"container\">\r\n            {isLoading \r\n               ? ( <div className=\"loader\">\r\n                     <span className=\"loader__text\">Loading...</span>\r\n                  </div> )\r\n               : ( <div className=\"movies\"> {\r\n                  movies.map(movie => (\r\n                   <Movie \r\n                     key={movie.id} //key 값을 항상 확인\r\n                     id={movie.id}\r\n                     year={movie.year}\r\n                     title={movie.title}\r\n                     summary={movie.summary}\r\n                     poster={movie.medium_cover_image}\r\n                     genres={movie.genres}\r\n                  /> ))}\r\n               </div>\r\n            )}\r\n         </section>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n                \"Freedom is the freedom to say that two plus two make four.\r\n                If that is granted, all else follows.\"\r\n            </span>\r\n            <span>- George Orwell, 1984</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\n//리다이렉트 기능 : route props의 history 키 활용\r\n//history키에는 push, go, goBack, goForward 등이 있음\r\nclass Detail extends React.Component {\r\n    componentDidMount() {\r\n        const { location, history } = this.props; //구조분해할당으로 location, history 얻음\r\n        if (location.state == undefined) { //location.state가 없는 경우\r\n            history.push('/'); //Home으로 이동\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { location } = this.props;\r\n        if (location.state) {\r\n            return <span>{location.state.title}</span>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\n//리액트는 필요한 부분만 페이지 변경하는게 장점\r\n//a의 href 속성은 페이지 전체를 다시 그리기 때문에 안좋음\r\nimport {Link} from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","//Router : 사용자가 입력한 URL을 통해 특정 컴포넌트를 불러줌\n//localhost:3000/home => Home 컴포넌트\n//localhost:3000/about => About 컴포넌트\n//react-router-dom은 여러 종류의 라우터를 제공함\nimport React from 'react';\n// import Home from './routes/Home';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './routes/Home';\nimport About from './routes/About';\nimport Detail from './routes/Detail';\nimport Navigation from './components/Navigation';\n\nfunction App() {\n   return (\n      <HashRouter>\n         <Navigation />\n         {/* path props \"/\" : 기본 접속 컴포넌트 */}\n         {/* exact props는 route 컴포넌트가 path props와 정확하게 일치하는 url에만 반응하도록 만듬 */}\n         <Route path=\"/\" exact={true} component={Home} />\n         <Route path=\"/about\" component={About} />\n         <Route path=\"/movie-detail\" component={Detail} />\n      </HashRouter>\n\n      // <HashRouter>\n      //    {/* 라우터는 사용자가 /home/introduction에 접속하면 /, /home, /home/introduction순으로\n      //    path props가 있는지 찾음. /home, /home/introduction이 둘 다 있으므로 home, introduction\n      //    컴포넌트가 모두 그려짐 */}\n      //    <Route path=\"/home\">\n      //       <h1>Home</h1>\n      //    </Route>\n      //    <Route path=\"/home/introduction\">\n      //       <h1>Introduction</h1>\n      //    </Route>\n      //    <Route path=\"/about\">\n      //       <h1>About</h1>\n      //    </Route>\n      // </HashRouter>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; //현재 파일이 있는 폴더 경로\n\n//첫번쨰 인자는 App 컴포넌트. <App /> 은 HTML이 아니고 컴포넌트로 인식하기 위해 쓰는 표시.\n//  App 컴포넌트가 반환하는 값을 화면에 그려줌.\n//두번째 인자는 App 컴포넌트가 그려질 위치\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}